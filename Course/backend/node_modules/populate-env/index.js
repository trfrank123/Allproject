"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.populateEnv = exports.EnvError = void 0;
class EnvError extends Error {
    constructor(missingNames) {
        super(`Missing ${missingNames.join(', ')} in env`);
        this.missingNames = missingNames;
    }
}
exports.EnvError = EnvError;
function populateEnv(env, options) {
    let source = (options === null || options === void 0 ? void 0 : options.source) || process.env;
    let missingNames = [];
    for (let name in env) {
        let defaultValue = env[name];
        let envValue = source[name];
        if (envValue && typeof defaultValue === 'number') {
            envValue = +envValue;
        }
        let value = envValue || defaultValue;
        if (!value && value !== 0) {
            missingNames.push(name);
        }
        else {
            env[name] = value;
        }
    }
    if (missingNames.length > 0) {
        let error = new EnvError(missingNames);
        if ((options === null || options === void 0 ? void 0 : options.mode) === 'halt') {
            console.error(error.message);
            process.exit(1);
        }
        throw error;
    }
}
exports.populateEnv = populateEnv;
exports.default = populateEnv;
